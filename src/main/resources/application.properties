quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/pmp_db_local
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.http.port=8081

quarkus.hibernate-orm.database.generation=none
quarkus.flyway.migrate-at-start=true

# --- CORRECTED AND FINAL SECURITY CONFIGURATION ---

# 1. Basic OIDC configuration
quarkus.oidc.auth-server-url=http://localhost:8080/realms/PollsRealm
quarkus.oidc.client-id=poll-service
quarkus.oidc.credentials.secret=Zsz0tx6gNnQfqysoxSDWnF4KByuXpnmV
quarkus.oidc.tls.verification=none

# 2. Enable the Keycloak policy enforcer to create the AuthzClient bean
quarkus.keycloak.policy-enforcer.enable=true

# 3. Define a Keycloak-specific rule to make the user creation path public
quarkus.keycloak.policy-enforcer.paths./users.methods.POST.enforcement-mode=DISABLED


# This property provides the default signing key for the JWT Build API.
# smallrye.jwt.sign.key.location=keys/privateKey.pem

# This property is still needed by the security extension to VERIFY incoming tokens.
# mp.jwt.verify.publickey.location=keys/publicKey.pem

# The issuer must also be configured for the security extension.
# quarkus.smallrye-jwt.enabled=true
# mp.jwt.verify.issuer=https://poll-service-konrad.com